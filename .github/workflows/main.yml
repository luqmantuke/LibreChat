name: Build and Deploy to Cloud Run

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  SERVICE_NAME: librechat
  REGION: us-central1

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Debug Environment Variables
        run: |
          echo "Project ID: $PROJECT_ID"
          echo "Service Name: $SERVICE_NAME"
          # Don't output actual secrets, just check if they're set
          if [ -n "$PROJECT_ID" ]; then echo "Project ID is set"; else echo "Project ID is NOT set"; fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker for GCP
        run: gcloud auth configure-docker

      - name: Create .env file
        run: |
          cat > .env << EOF
          MONGO_URI=${{ secrets.MONGO_URI }}
          # Add any other environment variables LibreChat needs
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY=${{ secrets.ANTHROPIC_API_KEY }}
          # Set this to false since we're using Cloud Run
          ENABLE_CLIENT_CERTIFICATE_AUTH=false
          HOST=0.0.0.0
          PORT=8080
          EOF

      - name: Build Docker image
        run: |
          echo "Building image: gcr.io/${{ secrets.GCP_PROJECT_ID }}/$SERVICE_NAME:${{ github.sha }}"
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/$SERVICE_NAME:${{ github.sha }} .

      - name: Push Docker image
        run: |
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/$SERVICE_NAME:${{ github.sha }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE_NAME \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/$SERVICE_NAME:${{ github.sha }} \
            --platform managed \
            --region ${{ env.REGION }} \
            --allow-unauthenticated \
            --memory 2Gi \
            --cpu 2 \
            --port 8080 \
            --set-env-vars="MONGO_URI=${{ secrets.MONGO_URI }},OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }},ANTHROPIC_API_KEY=${{ secrets.ANTHROPIC_API_KEY }}"
